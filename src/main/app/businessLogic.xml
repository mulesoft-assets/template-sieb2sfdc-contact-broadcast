<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" 
	xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" 
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:json="http://www.mulesoft.org/schema/mule/json" 
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch" 
	xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:core="http://www.mulesoft.org/schema/mule/core" 
	version="EE-3.6.2" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <data-mapper:config name="Contact_Contact_To_Contact" transformationGraphPath="contact.contact_to_contact.grf" doc:name="Contact_Contact_To_Contact"/>
    
    <batch:job name="syncContactsBatch">
        <batch:threading-profile poolExhaustedAction="WAIT"/>

        <batch:process-records>
            <batch:step name="getContactInSalesforceStep">
                <enricher source="#[payload]" target="#[recordVars['contactInSalesforce']]" doc:name="store Salesforce contact in var 'contactInSalesforce'">
                    <sfdc:query-single config-ref="Salesforce" query="SELECT Id FROM Contact WHERE Email = '#[payload[&quot;Email Address&quot;]]'" doc:name="query contacts from Salesforce"/>
                </enricher>
            </batch:step>
            <batch:step name="findOrCreateAccountInSalesforceStep" accept-expression="payload['Account'] != ''" accept-policy="ALL">
                <enricher doc:name="store Salesforce account in var 'accountInSalesforce'" source="#[payload]" target="#[recordVars['accountInSalesforce']]">
                    <sfdc:query-single config-ref="Salesforce" query="SELECT Id,Name from Account where Name = '#[payload[&quot;Account&quot;]]'" doc:name="query accounts from Salesforce"/>
                </enricher>
                <choice doc:name="Choice">
                    <when expression="#[recordVars['accountInSalesforce'] is NullPayload]">
                        <enricher source="#[payload]" target="#[recordVars['idOfAccountInSalesforce']]" doc:name="store id of the new account in var 'idOfAccountInSalesforce'">
                            <processor-chain doc:name="Processor Chain">
                                <expression-component doc:name="prepare account for creation"><![CDATA[String name = payload['Account'];
payload = new java.util.HashMap();
payload.put('Name', name);]]></expression-component>
                                <sfdc:create-single config-ref="Salesforce" type="Account" doc:name="create account in Salesforce">
                                    <sfdc:object ref="#[payload]"/>
                                </sfdc:create-single>

																	  
                                <expression-transformer expression="#[payload.getId()]" doc:name="get the ID of the account created in Salesforce"/>
                            </processor-chain>
                        </enricher>
                    </when>
                    <otherwise>
                        <enricher source="#[payload]" target="#[recordVars['idOfAccountInSalesforce']]" doc:name="store id of the existing account in Siebel in var 'idOfAccountInSalesforce'">
                            <expression-transformer expression="#[recordVars['accountInSalesforce']['Id']]" doc:name="get ID of the existing account in Salesforce"/>
                        </enricher>

                    </otherwise>
                </choice>

            </batch:step>
            <batch:step name="forEachContactUpsertInSalesforceStep">

            	<data-mapper:transform doc:name="transform Siebel contact to Salesforce contact" config-ref="Contact_Contact_To_Contact"/>
                <expression-component doc:name="set contact's parent account ID"><![CDATA[payload.put('AccountId', recordVars['idOfAccountInSalesforce']);

if (recordVars['contactInSalesforce'] is NullPayload){  
	payload.remove('Id');  
}  else {  
	payload.put('Id', recordVars['contactInSalesforce']['Id']);  
}]]></expression-component>
                <batch:commit doc:name="Batch Commit" size="200">
                    <sfdc:upsert config-ref="Salesforce" externalIdFieldName="Id" type="Contact" doc:name="upsert contact in Salesforce">
                        <sfdc:objects ref="#[payload]"/>
                    </sfdc:upsert>
                    <logger message="after upsert: #[payload]" level="INFO" doc:name="log result"/>
                </batch:commit>

            </batch:step>
            
        </batch:process-records>
    </batch:job>

    <flow name="mainFlow" >
        <batch:execute name="syncContactsBatch" doc:name="trigger syncContactsBatch"/>
        <exception-strategy ref="defaultChoiceExceptionStrategy" doc:name="catch Exception and call defaultChoiceExceptionStrategy"/>
    </flow>
</mule>
